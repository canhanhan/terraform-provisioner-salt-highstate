name: Build
on: 
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: [ubuntu-latest]
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Test
      run: go test .
      
    - name: Build Linux x86
      run: GOOS=linux GOARCH=386 go build -v -o terraform-provisioner-salt-highstate_linux_386

    - name: Build Linux x64
      run: GOOS=linux GOARCH=amd64 go build -v -o terraform-provisioner-salt-highstate_linux_amd64

    - name: Build Windows x86
      run: GOOS=windows GOARCH=386 go build -v -o terraform-provisioner-salt-highstate_windows_386.exe

    - name: Build Windows x64
      run: GOOS=windows GOARCH=amd64 go build -v -o terraform-provisioner-salt-highstate_windows_amd64.exe

    - name: Upload Linux x86
      if: startsWith(github.ref, 'refs/tags/v') == false
      uses: actions/upload-artifact@v1
      with:
        name: terraform-provisioner-salt-highstate_v0.0.${{ github.run_id }}_linux_386
        path: terraform-provisioner-salt-highstate_linux_386

    - name: Upload Linux x64
      if: startsWith(github.ref, 'refs/tags/v') == false
      uses: actions/upload-artifact@v1
      with:
        name: terraform-provisioner-salt-highstate_v0.0.${{ github.run_id }}_linux_amd64
        path: terraform-provisioner-salt-highstate_linux_amd64

    - name: Upload Windows x86
      if: startsWith(github.ref, 'refs/tags/v') == false
      uses: actions/upload-artifact@v1
      with:
        name: terraform-provisioner-salt-highstate_v0.0.${{ github.run_id }}_windows_386.exe
        path: terraform-provisioner-salt-highstate_windows_386.exe

    - name: Upload Windows x64
      if: startsWith(github.ref, 'refs/tags/v') == false
      uses: actions/upload-artifact@v1
      with:
        name: terraform-provisioner-salt-highstate_v0.0.${{ github.run_id }}_windows_amd64.exe
        path: terraform-provisioner-salt-highstate_windows_amd64.exe

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ env.RELEASE_VERSION }}
        body: ${{ env.RELEASE_VERSION }}
        draft: true
        prerelease: false

    - name: Attach Linux x86 binary to release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./terraform-provisioner-salt-highstate_linux_386
        asset_name: terraform-provisioner-salt-highstate_${{ env.RELEASE_VERSION }}_linux_386
        asset_content_type: application/octet-stream

    - name: Attach Linux x64 binary to release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./terraform-provisioner-salt-highstate_linux_amd64
        asset_name: terraform-provisioner-salt-highstate_${{ env.RELEASE_VERSION }}_linux_amd64
        asset_content_type: application/octet-stream

    - name: Attach Windows x86 binary to release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./terraform-provisioner-salt-highstate_windows_386.exe
        asset_name: terraform-provisioner-salt-highstate_${{ env.RELEASE_VERSION }}_windows_386.exe
        asset_content_type: application/octet-stream

    - name: Attach Windows x64 binary to release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./terraform-provisioner-salt-highstate_windows_amd64.exe
        asset_name: terraform-provisioner-salt-highstate_${{ env.RELEASE_VERSION }}_windows_amd64.exe
        asset_content_type: application/octet-stream
